aes(fill = ifelse(underserved, "Underserved Vulnerable", "Other Tract")),
color = NA, alpha = 0.9
) +
geom_sf(data = pa_hospitals_proj, color = "red", size = 1, shape = 21, fill = "red") +
scale_fill_manual(
name = "Tract Type",
values = c("Underserved Vulnerable" = "#b30000", "Other Tract" = "#e6e6e6"),
na.translate = FALSE
) +
labs(
title = "Underserved Vulnerable Census Tracts in Pennsylvania",
subtitle = "Tracts more than 15 miles from the nearest hospital",
caption = "Data: ACS 2023, PA Dept. of Health Hospital Locations"
) +
theme_void() +
theme(
legend.position = "right",
legend.title = element_text(size = 10, face = "bold"),
legend.text = element_text(size = 9),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 10)
)
ggplot() +
geom_sf(data = pa_counties_proj, fill = "grey95", color = "white", linewidth = 0.3) +
geom_sf(
data = tracts_underserved_map,
aes(fill = ifelse(underserved, "Underserved Vulnerable", "Other Tract")),
color = NA, alpha = 0.9
) +
geom_sf(data = pa_hospitals_proj, color = "navy", size = 1, shape = 21, fill = "blue") +
scale_fill_manual(
name = "Tract Type",
values = c("Underserved Vulnerable" = "darkred", "Other Tract" = "#e6e6e6"),
na.translate = FALSE
) +
labs(
title = "Underserved Vulnerable Census Tracts in Pennsylvania",
subtitle = "Tracts more than 15 miles from the nearest hospital",
caption = "Data: ACS 2023, PA Dept. of Health Hospital Locations"
) +
theme_void() +
theme(
legend.position = "right",
legend.title = element_text(size = 10, face = "bold"),
legend.text = element_text(size = 9),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 10)
)
ggplot() +
geom_sf(data = pa_counties_proj, fill = "grey95", color = "white", linewidth = 0.3) +
geom_sf(
data = tracts_underserved_map,
aes(fill = ifelse(underserved, "Underserved Vulnerable", "Other Tract")),
color = NA, alpha = 0.9
) +
geom_sf(data = pa_hospitals_proj, color = "navy", size = 1, shape = 21, fill = "blue") +
scale_fill_manual(
name = "Tract Type",
values = c("Underserved Vulnerable" = "darkred", "Other Tract" = "violet"),
na.translate = FALSE
) +
labs(
title = "Underserved Vulnerable Census Tracts in Pennsylvania",
subtitle = "Tracts more than 15 miles from the nearest hospital",
caption = "Data: ACS 2023, PA Dept. of Health Hospital Locations"
) +
theme_void() +
theme(
legend.position = "right",
legend.title = element_text(size = 10, face = "bold"),
legend.text = element_text(size = 9),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 10)
)
ggplot() +
geom_sf(data = pa_counties_proj, fill = "grey95", color = "white", linewidth = 0.3) +
geom_sf(
data = tracts_underserved_map,
aes(fill = ifelse(underserved, "Underserved Vulnerable", "Other Tract")),
color = NA, alpha = 0.9
) +
geom_sf(data = pa_hospitals_proj, color = "navy", size = 1, shape = 21, fill = "blue") +
scale_fill_manual(
name = "Tract Type",
values = c("Underserved-Vulnerable" = "darkred", "Vulnerable" = "violet"),
na.translate = FALSE
) +
labs(
title = "Underserved Vulnerable Census Tracts in Pennsylvania",
subtitle = "Tracts more than 15 miles from the nearest hospital",
caption = "Data: ACS 2023, PA Dept. of Health Hospital Locations"
) +
theme_void() +
theme(
legend.position = "right",
legend.title = element_text(size = 10, face = "bold"),
legend.text = element_text(size = 9),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 10)
)
ggplot() +
geom_sf(data = pa_counties_proj, fill = "grey95", color = "white", linewidth = 0.3) +
geom_sf(
data = tracts_underserved_map,
aes(fill = ifelse(underserved, "Underserved Vulnerable", "Other Tract")),
color = NA, alpha = 0.9
) +
geom_sf(data = pa_hospitals_proj, color = "navy", size = 1, shape = 21, fill = "blue") +
scale_fill_manual(
name = "Tract Type",
values = c("Underserved Vulnerable" = "darkred", "Other Tract" = "darkorange"),
na.translate = FALSE
) +
labs(
title = "Underserved Vulnerable Census Tracts in Pennsylvania",
subtitle = "Tracts more than 15 miles from the nearest hospital",
caption = "Data: ACS 2023, PA Dept. of Health Hospital Locations"
) +
theme_void() +
theme(
legend.position = "right",
legend.title = element_text(size = 10, face = "bold"),
legend.text = element_text(size = 9),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 10)
)
ggplot() +
geom_sf(data = pa_counties_proj, fill = "grey95", color = "white", linewidth = 0.3) +
geom_sf(
data = tracts_underserved_map,
aes(fill = ifelse(underserved, "Underserved-Vulnerable", "Vulnerable")),
color = NA, alpha = 0.9
) +
geom_sf(data = pa_hospitals_proj, color = "navy", size = 1, shape = 21, fill = "blue") +
scale_fill_manual(
name = "Tract Type",
values = c("Underserved-Vulnerable" = "darkred", "Vulnerable" = "darkorange"),
na.translate = FALSE
) +
labs(
title = "Underserved Vulnerable Census Tracts in Pennsylvania",
subtitle = "Tracts more than 15 miles from the nearest hospital",
caption = "Data: ACS 2023, PA Dept. of Health Hospital Locations"
) +
theme_void() +
theme(
legend.position = "right",
legend.title = element_text(size = 10, face = "bold"),
legend.text = element_text(size = 9),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 10)
)
ggplot() +
geom_sf(data = pa_counties_proj, fill = "grey95", color = "black", linewidth = 0.3) +
geom_sf(
data = tracts_underserved_map,
aes(fill = ifelse(underserved, "Underserved-Vulnerable", "Vulnerable")),
color = NA, alpha = 0.9
) +
geom_sf(data = pa_hospitals_proj, color = "navy", size = 1, shape = 21, fill = "blue") +
scale_fill_manual(
name = "Tract Type",
values = c("Underserved-Vulnerable" = "darkred", "Vulnerable" = "darkorange"),
na.translate = FALSE
) +
labs(
title = "Underserved Vulnerable Census Tracts in Pennsylvania",
subtitle = "Tracts more than 15 miles from the nearest hospital",
caption = "Data: ACS 2023, PA Dept. of Health Hospital Locations"
) +
theme_void() +
theme(
legend.position = "right",
legend.title = element_text(size = 10, face = "bold"),
legend.text = element_text(size = 9),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 10)
)
ggplot(tract_center, aes(x = nearest_hosp_mi)) +
geom_histogram(
bins = 30,
fill = "steelblue",
color = "white",
alpha = 0.8
) +
labs(
title = "Distribution of Distance to Nearest Hospital",
subtitle = "Among Vulnerable Census Tracts in Pennsylvania",
x = "Distance to Nearest Hospital (miles)",
y = "Number of Tracts",
caption = "Data: ACS 2023, PA Dept. of Health Hospital Locations"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(size = 10)
)
ggplot(tract_center, aes(x = COUNTY_NAM, y = nearest_hosp_mi)) +
geom_boxplot(fill = "darkorange", alpha = 0.7, outlier.color = "red") +
labs(
title = "Variation in Hospital Accessibility by County",
x = "County",
y = "Distance to Nearest Hospital (miles)"
) +
theme_minimal(base_size = 11) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(tracts_count2, aes(x = COUNTY_NAM, y = nearest_hosp_mi)) +
geom_boxplot(fill = "darkorange", alpha = 0.7, outlier.color = "red") +
labs(
title = "Variation in Hospital Accessibility by County",
x = "County",
y = "Distance to Nearest Hospital (miles)"
) +
theme_minimal(base_size = 11) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(county_summary, aes(x = reorder(COUNTY_NAM, -pct_underserved), y = pct_underserved)) +
geom_col(fill = "darkred", alpha = 0.8) +
labs(
title = "Percentage of Underserved Vulnerable Tracts by County",
x = "County",
y = "Percent Underserved (%)"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(tract_center, aes(x = nearest_hosp_mi)) +
geom_histogram(
bins = 30,
fill = "darkseagreen",
color = "azure3",
alpha = 0.8
) +
labs(
title = "Distribution of Distance to Nearest Hospital",
subtitle = "Among Vulnerable Census Tracts in Pennsylvania",
x = "Distance to Nearest Hospital (miles)",
y = "Number of Tracts",
caption = "Data: ACS 2022, PA Dept. of Health Hospital Locations"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(size = 10)
)
philly_county <- pa_counties_proj %>%
filter(COUNTY_NAM == "PHILADELPHIA")
View(philly_county)
View(pa_districts)
View(pa_districts_proj)
philly_dist <- pa_districts_proj %>%
filter(HOME_COUNTY == "Philadelphia")
View(philly_dist)
View(philly_county)
View(philly_dist)
philly_schools <- st_read("data/Schools.geojson")
View(philly_schools)
st_crs(philly_schools)
```
philly_schools <- st_transform(philly_schools, 3365)
st_crs(philly_schools)
dist_school <- philly_schools %>%
filter(type_specific == "DISTRICT")
chart_school <- philly_schools %>%
filter(type_specific == "CHARTER")
priv_school <- philly_schools %>%
filter(type_specific == "PRIVATE")
View(PA_tracts)
View(PA_tracts_join)
philly_inc <- get_acs(
geography = "tract",
variables = school_age_vars,
state = "PA",
county = "Philadelphia",
year = 2022,
survey = "acs5",
output = "wide"
)
school_age_vars <- c(
"B01001_004", "B01001_005","B01001_006", #male 5-17
"B01001_028", "B01001_029", "B01001_030" #female 5-17
philly_inc <- get_acs(
philly_vars <- c(
median_income = "B19013_001",   # Median household income
male_5_9 = "B01001_004", female_5_9 = "B01001_028",
male_10_14 = "B01001_005", female_10_14 = "B01001_029",
male_15_17 = "B01001_006", female_15_17 = "B01001_030"
)
philly_inc <- get_acs(
geography = "tract",
variables = philly_vars,
state = "PA",
county = "Philadelphia",
year = 2022,
survey = "acs5",
output = "wide"
)
philly_kids <- philly_acs %>%
select(GEOID, variable, estimate) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
mutate(
school_age_pop = male_5_9 + female_5_9 +
male_10_14 + female_10_14 +
male_15_17 + female_15_17
) %>%
select(GEOID, median_income, school_age_pop)
View(PA_tracts_join)
View(philly_inc)
philly_tracts <- philly_inc %>%
mutate(school_age_pop = male_5_9E + female_5_9E +
male_10_14E + female_10_14E +
male_15_17E + female_15_17E) %>%
select(GEOID, median_incomeE, school_age_pop)
philly_tracts_join <- left_join(philly_dist, philly_tracts, by = "GEOID") %>%
st_transform(3365)
View(philly_tracts)
View(philly_dist)
philly_acs <- philly_inc %>%
mutate(
school_age_pop = male_5_9E + female_5_9E +
male_10_14E + female_10_14E +
male_15_17E + female_15_17E
) %>%
select(GEOID, median_incomeE, school_age_pop)
View(philly_acs)
# Step 2a: Buffer district schools by 0.5 miles (0.5 mi ≈ 2640 ft)
school_buffer <- st_buffer(dist_school, dist = 0.5 * 5280)
# Step 2b: Spatial join - find tracts intersecting district school buffers
tracts_near_district <- st_join(philly_tracts, school_buffer, join = st_intersects)
philly_tracts <- st_transform(philly_tracts, 3365)
View(philly_tracts)
philly_acs <- philly_inc %>%
mutate(
school_age_pop = male_5_9E + female_5_9E +
male_10_14E + female_10_14E +
male_15_17E + female_15_17E
) %>%
select(GEOID, median_incomeE, school_age_pop)
View(philly_inc)
philly_acs <- philly_inc %>%
mutate(
school_age_pop = male_5_9E + female_5_9E +
male_10_14E + female_10_14E +
male_15_17E + female_15_17E,
income_cat = case_when(
median_incomeE < 40000 ~ "Low",
median_incomeE < 80000 ~ "Medium",
TRUE ~ "High"
)
) %>%
select(GEOID, median_incomeE, school_age_pop)
View(philly_acs)
philly_acs <- philly_inc %>%
mutate(
school_age_pop = male_5_9E + female_5_9E +
male_10_14E + female_10_14E +
male_15_17E + female_15_17E,
) %>%
select(GEOID, median_incomeE, school_age_pop)
philly_full <- left_join(philly_inc, philly_acs, by = "GEOID")
View(philly_full)
philly_full <- left_join(philly_inc, philly_acs, by = "GEOID","median_incomeE")
philly_full <- philly_full %>%
mutate(
inc_cat = case_when(
median_incomeE.x < 40000 ~ "Low",
median_incomeE.x < 80000 ~ "Medium",
TRUE ~ "High"
)
)
philly_tracts_geo <- pa_census_proj %>%
filter(COUNTY_NAM == "Philadelphia") %>%
left_join(philly_inc_full, by = "GEOID") %>%
st_transform(3365)  # PA State Plane
View(pa_census_proj)
View(pa_census)
View(pa_census_proj)
View(pa_count_mp)
View(pa_census_proj)
View(pa_counties)
philly_tracts_geo <- pa_census_proj %>%
filter(NAMELSAD == "Philadelphia County") %>%
left_join(philly_inc_full, by = "GEOID") %>%
st_transform(3365)
philly_tracts_geo <- pa_census_proj %>%
filter(NAMELSAD == "Philadelphia County") %>%
left_join(philly_full, by = "GEOID") %>%
st_transform(3365)
View(philly_tracts_geo)
colnames(philly_full)
colnames(pa_census_proj)
philly_tracts_geo <- pa_census_proj %>%
filter(COUNTYFP == "101")
philly_tracts_geo <- philly_tracts_geo %>%
left_join(philly_full, by = "GEOID")
head(philly_tracts_geo$median_incomeE.y)
summary(philly_tracts_geo$school_age_pop)
head(philly_tracts_geo$median_incomeE.y)
summary(philly_tracts_geo$school_age_pop)
summary(PA_tracts_join$med_incE)
PA_inc_oldthresh <- PA_tracts_proj %>% #med income threshold and age
filter(med_incE <= 55923.5, pop65_over > 927)
View(PA_inc_oldthresh)
philly_tract_centers <- st_centroid(philly_tracts_geo)
philly_tracts_geo <- pa_census_proj %>%
filter(COUNTYFP == "101")
philly_tracts_geo <- philly_tracts_geo %>%
left_join(philly_full, by = "GEOID")
philly_tract_centers <- st_centroid(philly_tracts_geo)
philly_tracts_geo <- tracts(state = "PA", county = "Philadelphia", cb = TRUE)
philly_tracts_geo <- st_transform(philly_tracts_geo, 3365)
# Join income + child population data to tract geometry
philly_tracts_geo <- left_join(philly_tracts_geo, philly_full, by = "GEOID")
philly_tract_centers <- st_centroid(philly_tracts_geo)
# --- Calculate nearest school distances for each tract ---
# Convert school datasets to same CRS (double-check)
dist_school <- st_transform(dist_school, 3365)
chart_school <- st_transform(chart_school, 3365)
priv_school <- st_transform(priv_school, 3365)
philly_tract_centers <- philly_tract_centers %>%
mutate(
dist_to_district_mi = nearest_miles(geometry, dist_school),
dist_to_charter_mi  = nearest_miles(geometry, chart_school),
dist_to_private_mi  = nearest_miles(geometry, priv_school)
)
nearest_miles <- function(from, to) {
d <- st_distance(from, to)
apply(d, 1, min) / 5280  # feet to miles
}
philly_tract_centers <- philly_tract_centers %>%
mutate(
dist_to_district_mi = nearest_miles(geometry, dist_school),
dist_to_charter_mi  = nearest_miles(geometry, chart_school),
dist_to_private_mi  = nearest_miles(geometry, priv_school)
)
summary(philly_tract_centers$dist_to_district_mi)
View(philly_tract_centers)
philly_tract_centers <- philly_tract_centers %>%
mutate(
min_school_dist_mi = pmin(dist_to_district_mi, dist_to_charter_mi, dist_to_private_mi),
far_from_school = min_school_dist_mi > 1  # define threshold
)
philly_tract_centers <- philly_tract_centers %>%
mutate(
min_school_dist_mi = pmin(dist_to_district_mi, dist_to_charter_mi, dist_to_private_mi),
far_from_school = min_school_dist_mi > .8  # define threshold
)
school_dist_summary <- philly_tract_centers %>%
st_set_geometry(NULL) %>%  # remove geometry for summarizing
group_by(inc_cat) %>%
summarise(
avg_district = mean(dist_to_district_mi, na.rm = TRUE),
avg_charter  = mean(dist_to_charter_mi, na.rm = TRUE),
avg_private  = mean(dist_to_private_mi, na.rm = TRUE)
)
print(school_dist_summary)
school_dist_long <- school_dist_summary %>%
pivot_longer(
cols = starts_with("avg_"),
names_to = "school_type",
values_to = "avg_distance_mi"
) %>%
mutate(
school_type = recode(school_type,
"avg_district" = "District",
"avg_charter"  = "Charter",
"avg_private"  = "Private")
)
# Plot
ggplot(school_dist_long, aes(x = inc_cat, y = avg_distance_mi, fill = school_type)) +
geom_col(position = "dodge") +
labs(
title = "Average Distance to Nearest School by Income Category",
subtitle = "District, Charter, and Private Schools in Philadelphia",
x = "Income Category",
y = "Average Distance (miles)",
fill = "School Type"
) +
theme_minimal(base_size = 13) +
scale_fill_manual(values = c(
"District" = "#1f77b4",
"Charter"  = "#ff7f0e",
"Private"  = "#9467bd"
))
ggplot() +
geom_sf(data = philly_tracts_geo, aes(fill = median_incomeE.x), color = NA) +
geom_sf(data = dist_school, color = "blue", size = 1, shape = 21, fill = "blue") +
geom_sf(data = chart_school, color = "orange", size = 1, shape = 21, fill = "orange") +
geom_sf(data = priv_school, color = "purple", size = 1, shape = 21, fill = "purple") +
scale_fill_viridis(option = "plasma", direction = -1) +
labs(
title = "School Locations and Income Distribution in Philadelphia",
fill = "Median Income ($)",
caption = "Data: 2022 ACS & OpenDataPhilly Schools"
) +
theme_void()
ggplot() +
geom_sf(data = philly_tracts_geo, aes(fill = median_incomeE.x), color = NA) +
geom_sf(data = dist_school, color = "blue", size = 1, shape = 21, fill = "blue") +
geom_sf(data = chart_school, color = "orange", size = 1, shape = 21, fill = "orange") +
geom_sf(data = priv_school, color = "purple", size = 1, shape = 21, fill = "purple") +
scale_fill_viridis c(option = "plasma", direction = -1) +
ggplot() +
geom_sf(data = philly_tracts_geo, aes(fill = median_incomeE.x), color = NA) +
geom_sf(data = dist_school, color = "blue", size = 1, shape = 21, fill = "blue") +
geom_sf(data = chart_school, color = "orange", size = 1, shape = 21, fill = "orange") +
geom_sf(data = priv_school, color = "purple", size = 1, shape = 21, fill = "purple") +
scale_fill_viridis_c(option = "plasma", direction = -1) +
labs(
title = "School Locations and Income Distribution in Philadelphia",
fill = "Median Income ($)",
caption = "Data: 2022 ACS & OpenDataPhilly Schools"
) +
theme_void()
