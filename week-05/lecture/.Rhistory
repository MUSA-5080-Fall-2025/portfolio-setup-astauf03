#| include: false
options(scipen = 999)
library(tidyverse)
library(tidycensus)
library(broom)
library(scales)
census_api_key("eeb46a4e68d059982c2b048f843063e19bc4c294")
#| include: false
options(scipen = 999)
library(tidyverse)
library(tidycensus)
library(broom)
library(scales)
census_api_key("eeb46a4e68d059982c2b048f843063e19bc4c294")
#| include: false
options(scipen = 999)
library(tidyverse)
library(tidycensus)
library(broom)
library(scales)
census_api_key("eeb46a4e68d059982c2b048f843063e19bc4c294")
#| include: false
options(scipen = 999)
library(tidyverse)
library(tidycensus)
library(broom)
library(scales)
library(tidycensus)
census_api_key("eeb46a4e68d059982c2b048f843063e19bc4c294")
#| include: false
options(scipen = 999)
library(tidyverse)
library(tidycensus)
library(broom)
library(scales)
library(tidycensus)
census_api_key("eeb46a4e68d059982c2b048f843063e19bc4c294")
#| include: false
options(scipen = 999)
library(tidyverse)
library(tidycensus)
library(broom)
library(scales)
census_api_key("eeb46a4e68d059982c2b048f843063e19bc4c294")
challenge_data <- get_acs(
geography = "county",
state = "PA",
variables = c(
total_pop = "B01003_001",
median_age = "B01002_001",
percent_college = "B15003_022",
poverty_rate = "B17001_002"
),
year = 2022,
output = "wide"
)
challenge_data <- get_acs(
geography = "county",
state = "PA",
variables = c(
total_pop = "B01003_001",
median_age = "B01002_001",
percent_college = "B15003_022",
poverty_rate = "B17001_002",
median_homeval = "B25077_001"
),
year = 2022,
output = "wide"
)
mod1 <- lm(median_homeval ~ total_pop, median_age, percent_college, poverty_rate, challenge_data)
View(challenge_data)
challenge_data <- get_acs(
geography = "county",
state = "PA",
variables = c(
total_pop = "B01003_001",
median_age = "B01002_001",
percent_college = "B15003_022",
poverty_rate = "B17001_002",
median_homeval = "B25077_001"
),
year = 2022,
output = "wide"
)
mod1 <- lm(challenge_data$median_homevalE ~ challenge_data$total_popE)
View(mod1)
summary(mod1)
mod1 <- lm(challenge_data$median_homevalE ~ challenge_data$total_popE + challenge_data$median_ageE + challenge_data$percent_collegeE,challenge_data$poverty_rateE)
mod1 <- lm(challenge_data$median_homevalE ~ challenge_data$total_popE + challenge_data$median_ageE + challenge_data$percent_collegeE,challenge_data$poverty_rateE, challenge_data)
mod1 <- lm(median_homevalE ~ total_popE + median_ageE + percent_collegeE + poverty_rate, challenge_data)
mod1 <- lm(median_homevalE ~ total_popE + median_ageE + percent_collegeE + poverty_rateE, challenge_data)
summary(mod1)
ggplot(challenge_data, aes(x = total_popE,median_ageE ,percent_collegeE, poverty_rateE, challenge_data
y = median_incomeE)) +
ggplot(challenge_data, aes(x = total_popE,median_ageE ,percent_collegeE, poverty_rateE, challenge_data)
y = ((median_incomeE)) +
ggplot(challenge_data, aes(x = total_popE,median_ageE ,percent_collegeE, poverty_rateE))
y = ((median_incomeE)) +
geom_point(alpha = 0.6, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "steelblue") +
labs(
title = "Population vs Median Income in PA Counties",
x = "Total Population, other x values i dont have time for"
y = "Median Household Income"
y = ((median_incomeE)) +
geom_point(alpha = 0.6, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "steelblue") +
labs(
title = "Population vs Median Income in PA Counties",
x = "Total Population, other x values i dont have time for",
y = "Median Household Income"
) +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar) +
theme_minimal()
ggplot(challenge_data, aes(x = total_popE, median_ageE ,percent_collegeE, poverty_rateE))
y = ((median_homevalE)) +
geom_point(alpha = 0.6, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "steelblue") +
labs(
title = "Population vs Median Income in PA Counties",
x = "Total Population, other x values i dont have time for",
y = "Median Household Income"
) +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar) +
theme_minimal()
ggplot(challenge_data, aes(x = total_popE, median_ageE ,percent_collegeE, poverty_rateE))
y = ((challenge_data$median_homevalE)) +
geom_point(alpha = 0.6, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "steelblue") +
labs(
title = "Population vs Median Income in PA Counties",
x = "Total Population, other x values i dont have time for",
y = "Median Household Income"
) +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar) +
theme_minimal()
mod1 <- lm(median_homevalE ~ total_popE + median_ageE + percent_collegeE + poverty_rateE, data = challenge_data)
summary(mod1)
library(ggplot2)
# Visualize the relationship
library(broom)
library(ggplot2)
tidy_mod <- tidy(mod1)
ggplot(tidy_mod, aes(x = reorder(term, estimate), y = estimate)) +
geom_col(fill = "steelblue") +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2) +
coord_flip() +
labs(
title = "Predictors of Median Home Value (OLS Model)",
x = "Variable",
y = "Coefficient Estimate"
) +
theme_minimal()
# Visualize the relationship
library(broom)
library(ggplot2)
library(ggfortify)
install.packages(ggfortify)
# Visualize the relationship
library(tidyverse)
library(ggplot2)
library(scales)
ggplot(challenge_data, aes(x = total_popE, y = median_homevalE)) +
geom_point(color = "#E74C3C", alpha = 0.6, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "#2C3E50", linewidth = 1.5) +
annotate("text",
x = min(challenge_data$total_popE, na.rm = TRUE) * 1.5,
y = max(challenge_data$median_homevalE, na.rm = TRUE) * 0.9,
label = "Y = f(X) + Îµ",
size = 6, fontface = "bold", hjust = 0) +
labs(
title = "OLS Model of Median Home Value in Pennsylvania Counties",
subtitle = "Visualizing the relationship between Total Population and Median Home Value",
x = "Total Population",
y = "Median Home Value (USD)"
) +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16),
panel.grid.minor = element_blank()
)
