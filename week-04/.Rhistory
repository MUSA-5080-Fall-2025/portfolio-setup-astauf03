library(sf)
library(tidyverse)
library(tigris)
library(tidycensus)
library(scales)
library(patchwork)
library(here)
library(sf)
library(tidyverse)
library(ggplot2)
library(tigris)
library(tidycensus)
census_api_key("eeb46a4e68d059982c2b048f843063e19bc4c294")
pa_counties <- st_read("data/Pennsylvania_County_Boundaries.shp")
districts <- st_read("data/districts.geojson")
hospitals <- st_read("data/hospitals.geojson")
#make crs the same (will go over later!)
hospitals <- hospitals %>%
st_transform(st_crs(pa_counties))
state_bounds <- st_read("https://gis.penndot.pa.gov/gis/rest/services/opendata/stateboundary/MapServer/0/query?outFields=*&where=1%3D1&f=geojson")
#get census tracts (boundaries only) using the tigris package
census_tracts <- tracts(state = "PA", cb = TRUE)
#make crs match I'll review this later!
census_tracts <- census_tracts %>%
st_transform(st_crs(pa_counties))
# Get urban areas (Census Bureau definition)
# These are areas with 2,500+ people
metro_areas <- core_based_statistical_areas(cb = TRUE)
metro_areas <- metro_areas %>%
st_transform(st_crs(pa_counties))
st_geometry(pa_counties)
glimpse(pa_counties)
st_crs(pa_counties)
county_shapes <- st_geometry(pa_counties)
county_data <- st_drop_geometry(pa_counties)
plot(pa_counties)
plot(pa_counties[1])
plot(st_geometry(pa_counties))
ggplot(pa_counties) +
geom_sf() +
theme_void()
View(pa_counties)
allegheny <- pa_counties %>%
filter(COUNTY_NAM == "ALLEGHENY")
View(allegheny)
neighbors <- pa_counties %>%
st_filter(allegheny, .predicate = st_touches)
ggplot(neighbors) +
geom_sf() +
theme_void()
allegheny_center <- st_centroid(allegheny)
nearby <- pa_counties %>%
st_filter(st_buffer(allegheny_center, dist = 50000))
ggplot(nearby) +
geom_sf() +
theme_void()
tracts_in_allegheny <- census_tracts %>%
st_filter(allegheny, .predicate = st_within)
ggplot(tracts_in_allegheny) +
geom_sf() +
theme_void()
ggplot(metro_areas) +
geom_sf() +
theme_void()
ggplot(metro_areas) +
geom_sf() +
theme_void()
metro_tracts<- census_tracts %>%
st_filter(metro_areas, .predicate = st_intersects)
ggplot(metro_tracts) +
geom_sf() +
theme_void()
ggplot(rural_tracts) +
geom_sf() +
theme_void()
allegheny_center <- st_centroid(allegheny)
nearby <- pa_counties %>%
st_filter(st_buffer(allegheny_center, dist = 50000))
ggplot(nearby) +
geom_sf() +
theme_void()
tracts_in_allegheny <- census_tracts %>%
st_filter(allegheny, .predicate = st_within)
ggplot(tracts_in_allegheny) +
geom_sf() +
theme_void()
ggplot(metro_areas) +
geom_sf() +
theme_void()
metro_tracts<- census_tracts %>%
st_filter(metro_areas, .predicate = st_intersects)
ggplot(metro_tracts) +
geom_sf() +
theme_void()
pa_tracts <- tracts(state = "PA", county = "Allegheny", cb = TRUE)
tracts_with_counties <- census_tracts %>%
st_join(pa_counties)
county_summaries <- tracts_with_counties %>%
st_drop_geometry() %>%
group_by(COUNTY_NAM) %>%
summarize(
n_tracts = n(),
avg_area = mean(AREA_SQ_MI)
)
county_summaries
View(county_summaries)
county_centers <- st_centroid(pa_counties)
ggplot(county_centers)+
geom_sf()+
theme_void()
distance_matrix <- st_distance(county_centers)
head(distance_matrix)
pa_counties <- pa_counties %>%
mutate(
area_sqkm = as.numeric(st_area(.)) / 1000000  # Convert to sq km
)
pa_counties <- pa_counties %>%
mutate(
area_sqkm = as.numeric(st_area(.)) / 1000000  # Convert to sq km
)
pa_counties <- pa_counties %>%
left_join(county_population_data, by = "GEOID") %>%
mutate(
pop_density = population / area_sqkm
)
View(pa_counties)
philadelphia <- pa_counties %>%
filter(NAME == "Philadelphia")
philadelphia <- pa_counties %>%
filter(COUNTY_NAM == "Philadelphia")
philly_center <- st_centroid(philadelphia)
pa_counties <- pa_counties %>%
mutate(
dist_to_philly = as.numeric(st_distance(
st_centroid(.), philly_center
)) / 1000  # Convert to kilometers
)
philadelphia <- pa_counties %>%
filter(COUNTY_NAM == "Philadelphia")
philly_center <- st_centroid(philadelphia)
pa_counties <- pa_counties %>%
mutate(
dist_to_philly = as.numeric(st_distance(
st_centroid(.), philly_center
)) / 1000  # Convert to kilometers
)
hospitals_projected <- hospitals %>%
st_transform(crs = 3365)
st_crs(hospitals_projected)
hospital_buffers <- hospitals_projected %>%
st_buffer(dist = 32808.4)  # 10,000 meters = 32808.4 feet
ggplot(hospital_buffers)+
geom_sf()+
theme_void()
pa_tracts_data <- get_acs(
geography = "tract",
variables = c(
median_income = "B19013_001",
total_pop = "B01003_001",
over_65 = "B01001_020"  # Population 65 years and over
),
state = "PA",
year = 2022,
output = "wide"
)
tracts <- tracts %>%
left_join(pa_tracts_data, by = "GEOID")
census_tracts <- census_tracts %>%
left_join(pa_tracts_data, by = "GEOID")
View(census_tracts)
low_income_tracts <- tracts %>%
filter(median_incomeE < 40000)
low_income_tracts <- census_tracts %>%
filter(median_incomeE < 40000)
low_income_tracts  <- low_income_tracts  %>%
st_transform(crs = 3365)
low_income_tracts <- census_tracts %>%
filter(median_incomeE < 40000)
low_income_tracts  <- low_income_tracts  %>%
st_transform(crs = 3365)
healthcare_accessible <- low_income_tracts %>%
st_intersection(st_union(hospital_buffers))
View(healthcare_accessible)
ggplot(healthcare_accessible)+
geom_sf()+
theme_void()
access_summary <- low_income_tracts %>%
mutate(
has_access = st_intersects(., st_union(hospital_buffers), sparse = FALSE)
) %>%
st_drop_geometry() %>%
summarize(
total_tracts = n(),
tracts_with_access = sum(has_access),
pct_with_access = (tracts_with_access / total_tracts) * 100
)
View(access_summary)
print(access_summary)
allegheny_boundary<- tracts_in_allegheny %>%
st_union()
View(allegheny)
View(allegheny_boundary)
library(patchwork)
p1 <- ggplot(tracts_in_allegheny) +
geom_sf(fill = "lightblue", color = "white") +
labs(title = "Individual Census Tracts") +
theme_void()
p2 <- ggplot() +
geom_sf(data = allegheny_boundary, fill = "darkblue") +
labs(title = "Unioned County Boundary") +
theme_void()
p1 | p2
districts_with_data <- districts %>%
left_join(tracts_by_district, by = "OBJECTID")
districts <- districts %>%
st_transform(st_crs(tracts))
View(districts)
View(census_tracts)
districts <- districts %>%
st_transform(st_crs(census_tracts))
tracts_by_district <- census_tracts %>%
st_join(districts) %>%
st_drop_geometry() %>%
group_by(OBJECTID) %>%
summarize(
total_population = sum(total_popE),
avg_income = weighted.mean(median_incomeE, total_popE),
n_tracts = n()
)
districts_with_data <- districts %>%
left_join(tracts_by_district, by = "OBJECTID")
ggplot(districts_with_data) +
geom_sf(aes(fill = total_population), color = "white") +
labs(title = "Population by District") +
theme_void()
library(scales)
ggplot(districts_with_data) +
geom_sf(aes(fill = total_population), color = "white", size = 0.5) +
scale_fill_viridis_c(
name = "Population",
labels = comma,  # Format with commas
option = "plasma"  # Color scheme
) +
labs(
title = "Population by District",
subtitle = "Total population from census tracts",
caption = "Source: ACS 2018-2022"
) +
theme_void()
areas<- pa_counties %>%
st_transform(4326) %>%  # Geographic
mutate(area_geographic = as.numeric(st_area(.))) %>%
st_transform(5070) %>%  # Albers
mutate(area_albers = as.numeric(st_area(.))) %>%
st_drop_geometry() %>%
select(COUNTY_NAM, area_geographic, area_albers) %>%
mutate(
ratio = area_albers / area_geographic,
difference_pct = (abs(area_albers - area_geographic) / area_albers) * 100
)
library(sf)
library(tidyverse)
library(tigris)
library(tidycensus)
library(scales)
library(patchwork)
library(here)
